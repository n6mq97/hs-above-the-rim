"""added ondelete onupdate for relationships

Revision ID: 92cbd326e735
Revises: ec85afe8ce04
Create Date: 2025-04-15 08:43:23.468533

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '92cbd326e735'
down_revision: Union[str, None] = 'ec85afe8ce04'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('games', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_games_HOME_TEAM_ID_teams'), 'teams', ['HOME_TEAM_ID'], ['ID'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('fk_games_VISITING_TEAM_ID_teams'), 'teams', ['VISITING_TEAM_ID'], ['ID'], onupdate='CASCADE', ondelete='CASCADE')

    with op.batch_alter_table('quarters', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_quarters_GAME_ID_games'), 'games', ['GAME_ID'], ['ID'], onupdate='CASCADE', ondelete='CASCADE')

    with op.batch_alter_table('teams', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_teams_NAME'), ['NAME'])
        batch_op.create_unique_constraint(batch_op.f('uq_teams_SHORT'), ['SHORT'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('teams', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_teams_SHORT'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_teams_NAME'), type_='unique')

    with op.batch_alter_table('quarters', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_quarters_GAME_ID_games'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'games', ['GAME_ID'], ['ID'])

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_games_VISITING_TEAM_ID_teams'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_games_HOME_TEAM_ID_teams'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'teams', ['VISITING_TEAM_ID'], ['ID'])
        batch_op.create_foreign_key(None, 'teams', ['HOME_TEAM_ID'], ['ID'])

    # ### end Alembic commands ###
